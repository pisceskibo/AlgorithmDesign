VD1: Xác định độ phức tạp
T(n) = 2T(n-1) - 1 với n > 0
T(n) = 1 ngược lại

T(n) = 2T(n-1) - 1
     = 2[2T(n-2) - 1] - 1 = 2^2 * T(n-2) - 2 - 1
     = 2^2 [2T(n-3) - 1] - 2 - 1 = 2^3 * T(n-3) - 2^2 -2 - 1
     ...
     = 2^n * T(n-n) - 2^(n-1) - 2^(n-2) - ... - 2^2 - 2 - 1
     = 2^n * T(0) - (2^(n-1) + 2^(n-2) + ... + 2^2 + 2 + 1) 
     = 2^n - (2^n - 1) = 1
=> Độ phức tạp O(1)


VD2: Xác định độ phức tạp
T(n) = 2T(n-1) với n > 0
T(n) = 1 ngược lại

T(n) = 3T(n-1) = 3^2 * T(n-2)
     = 3^3 * T(n-3) 
     = ...
     = 3^n * T(n-n) = 3^n * T(0) = 3^n
=> Độ phức tạp O(3^n)


VD3: Với a là các bài toán con
a) a = 2, d = 1, b = 2 
a = b^d => O(n*logn)
b) a = 4, d = 1, b = 3
a > b^d => O(n^log_3(4))
c) a = 3, d = 2, b = 2
a = 3 < b^d = 2^2 => O(n^2)
